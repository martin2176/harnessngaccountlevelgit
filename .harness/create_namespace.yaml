pipeline:
  name: create namespace
  identifier: create_namespace
  projectIdentifier: demo
  orgIdentifier: tif
  tags: {}
  stages:
    - stage:
        name: apply yaml
        identifier: apply_yaml
        description: ""
        type: Deployment
        spec:
          deploymentType: Kubernetes
          service:
            serviceRef: <+input>
            serviceInputs: <+input>
          execution:
            steps:
              - step:
                  type: K8sDryRun
                  name: K8sDryRun_2
                  identifier: K8sDryRun_1
                  spec:
                    delegateSelectors:
                      - helm-delegate
                  timeout: 30s
              - step:
                  type: K8sApply
                  name: K8sApply_1
                  identifier: K8sApply_1
                  spec:
                    filePaths: <+input>
                    skipDryRun: false
                    skipSteadyStateCheck: false
                    skipRendering: false
                    overrides: []
                  timeout: 30s
                  failureStrategies:
                    - onFailure:
                        errors:
                          - Unknown
                        action:
                          type: Ignore
            rollbackSteps: []
          environment:
            environmentRef: production
            deployToAll: false
            infrastructureDefinitions:
              - identifier: martinaks2prod
        tags: {}
        failureStrategies:
          - onFailure:
              errors:
                - AllErrors
              action:
                type: Ignore
