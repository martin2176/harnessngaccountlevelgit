pipeline:
  name: namespace operations
  identifier: namespaceoperations
  projectIdentifier: demonstration
  orgIdentifier: tif
  tags: {}
  stages:
    - stage:
        name: create or update or delete namespace
        identifier: create_or_update_namespace
        description: ""
        type: Deployment
        spec:
          deploymentType: Kubernetes
          service:
            serviceRef: namespace
          environment:
            environmentRef: org.prod
            deployToAll: false
            infrastructureDefinitions:
              - identifier: martinaks2prod
          execution:
            steps:
              - step:
                  type: K8sDryRun
                  name: k8sdryrun
                  identifier: k8sdryrun
                  spec: {}
                  timeout: 1m
              - step:
                  type: ShellScript
                  name: view k8s dry run
                  identifier: view_k8s_dry_run
                  spec:
                    shell: Bash
                    onDelegate: true
                    source:
                      type: Inline
                      spec:
                        script: echo <+pipeline.stages.create_or_update_namespace.spec.execution.steps.k8sdryrun.k8s.ManifestDryRun>
                    environmentVariables: []
                    outputVariables: []
                  timeout: 1m
              - parallel:
                  - step:
                      type: K8sApply
                      name: update-namespace
                      identifier: updatenamespace
                      spec:
                        filePaths:
                          - namespaces/artifacts/namespace-update.yaml
                        skipDryRun: false
                        skipSteadyStateCheck: false
                        skipRendering: false
                        overrides: []
                      timeout: 30s
                      when:
                        stageStatus: Success
                        condition: <+pipeline.variables.operation> == "update"
                  - step:
                      type: K8sApply
                      name: enable-istio-injection
                      identifier: enableistioinjection
                      spec:
                        filePaths:
                          - namespaces/artifacts/namespace-enableistioinjection.yaml
                        skipDryRun: false
                        skipSteadyStateCheck: false
                        skipRendering: false
                        overrides: []
                      timeout: 30s
                      when:
                        stageStatus: Success
                        condition: <+pipeline.variables.operation> == "enableistioinjection"
                  - stepGroup:
                      name: delete-namespace
                      identifier: delete_namespace
                      steps:
                        - step:
                            type: HarnessApproval
                            name: delete namespace
                            identifier: delete_namespace1
                            spec:
                              approvalMessage: "Pls approve/deny deletion of namespace: <+pipeline.variables.namespace>"
                              includePipelineExecutionHistory: true
                              isAutoRejectEnabled: false
                              approvers:
                                userGroups:
                                  - org._organization_all_users
                                minimumCount: 1
                                disallowPipelineExecutor: false
                              approverInputs: []
                            timeout: 1d
                            failureStrategies:
                              - onFailure:
                                  errors:
                                    - ApprovalRejection
                                  action:
                                    type: Abort
                        - step:
                            type: K8sDelete
                            name: delete namespace
                            identifier: delete_namespace
                            spec:
                              deleteResources:
                                type: ManifestPath
                                spec:
                                  manifestPaths:
                                    - namespaces/artifacts/namespace-delete.yaml
                            timeout: 30s
                      when:
                        stageStatus: Success
                        condition: <+pipeline.variables.operation> == "delete"
                  - stepGroup:
                      name: create-namespace
                      identifier: createnamespace
                      steps:
                        - step:
                            type: HarnessApproval
                            name: create namespace
                            identifier: create_namespace
                            spec:
                              approvalMessage: "Pls approve/deny creation of namespace: <+pipeline.variables.namespace>"
                              includePipelineExecutionHistory: true
                              isAutoRejectEnabled: false
                              approvers:
                                userGroups:
                                  - org._organization_all_users
                                minimumCount: 1
                                disallowPipelineExecutor: false
                              approverInputs: []
                            timeout: 1d
                            failureStrategies:
                              - onFailure:
                                  errors:
                                    - ApprovalRejection
                                  action:
                                    type: Abort
                        - step:
                            type: K8sApply
                            name: create-namespace
                            identifier: createorupdatenamespace
                            spec:
                              filePaths:
                                - namespaces/artifacts/namespace-create.yaml
                              skipDryRun: false
                              skipSteadyStateCheck: false
                              skipRendering: false
                              overrides: []
                            timeout: 30s
                            failureStrategies:
                              - onFailure:
                                  errors:
                                    - AllErrors
                                  action:
                                    type: Ignore
                      when:
                        stageStatus: Success
                        condition: <+pipeline.variables.operation> == "create"
            rollbackSteps: []
        tags: {}
        failureStrategies:
          - onFailure:
              errors:
                - AllErrors
              action:
                type: Ignore
  variables:
    - name: namespace
      type: String
      description: Enter the name of the namespace (mandatory)
      required: true
      value: <+input>
    - name: businessunit
      type: String
      description: Enter name of Business Unit (optional). If you don't enter one, a default value will be entered
      required: true
      value: <+input>.default(nobu)
    - name: operation
      type: String
      description: Select the required operation on the namespace
      required: true
      value: <+input>.allowedValues(create,update,delete,enableistioinjection,disableistioinjection)
